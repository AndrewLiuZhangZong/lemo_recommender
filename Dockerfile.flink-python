# Flink Python 支持镜像
# 基于官方 Flink 镜像，添加 Python 和 PyFlink 支持

FROM flink:1.19-scala_2.12-java11

LABEL maintainer="Lemo Recommender Team"
LABEL description="Flink with Python and PyFlink support for enterprise-grade job management"

# 切换到 root 用户安装软件
USER root

# 安装 Python 3.10 和必要工具（Ubuntu 22.04 自带）
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        python3 \
        python3-dev \
        python3-pip \
        python3-venv \
        wget \
        curl \
        unzip \
        vim \
    && ln -sf /usr/bin/python3 /usr/bin/python \
    && rm -rf /var/lib/apt/lists/*

# 升级 pip
RUN python3 -m pip install --no-cache-dir --upgrade pip setuptools wheel

# 安装 PyFlink（与 Flink 版本匹配）
RUN pip3 install --no-cache-dir apache-flink==1.19.0

# 安装常用 Python 数据处理库
RUN pip3 install --no-cache-dir \
    pandas==2.1.4 \
    numpy==1.26.3 \
    kafka-python==2.0.2 \
    pymongo==4.6.1 \
    redis==5.0.1 \
    httpx==0.26.0 \
    aiohttp==3.9.0 \
    pyyaml==6.0.1

# 安装 Flink 连接器（常用）
RUN pip3 install --no-cache-dir \
    apache-flink-libraries==1.19.0

# 创建作业目录
RUN mkdir -p /opt/flink/usrlib \
    && mkdir -p /opt/flink/python-archives \
    && mkdir -p /opt/flink/checkpoints \
    && mkdir -p /opt/flink/savepoints

# 设置 Python 环境变量
ENV PYFLINK_CLIENT_EXECUTABLE=python3
ENV PYTHON_HOME=/usr
ENV PATH="${PYTHON_HOME}/bin:${PATH}"

# 配置 Flink Python 支持（添加基础配置，其他配置在运行时通过 docker-compose 添加）
RUN echo "python.client.executable: python3" >> /opt/flink/conf/flink-conf.yaml \
    && echo "python.executable: python3" >> /opt/flink/conf/flink-conf.yaml

# 设置配置文件权限，允许 root 和任何用户都可以修改
RUN chmod -R 777 /opt/flink/conf

# 保持 root 用户（不切换回 flink），默认使用 root 运行
# USER flink  # 已注释，容器默认使用 root 用户

# 设置工作目录
WORKDIR /opt/flink

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8081/overview || exit 1

# 默认命令（使用启动脚本而不是直接启动 jobmanager）
CMD ["/bin/bash"]

