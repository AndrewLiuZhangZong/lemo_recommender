# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from recommender.v1 import analytics_pb2 as recommender_dot_v1_dot_analytics__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in recommender/v1/analytics_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class AnalyticsServiceStub(object):
    """数据分析服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDashboard = channel.unary_unary(
                '/lemo.recommender.v1.AnalyticsService/GetDashboard',
                request_serializer=recommender_dot_v1_dot_analytics__pb2.GetDashboardRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_analytics__pb2.GetDashboardResponse.FromString,
                _registered_method=True)
        self.GetMetricsTrend = channel.unary_unary(
                '/lemo.recommender.v1.AnalyticsService/GetMetricsTrend',
                request_serializer=recommender_dot_v1_dot_analytics__pb2.GetMetricsTrendRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_analytics__pb2.GetMetricsTrendResponse.FromString,
                _registered_method=True)
        self.GetItemDistribution = channel.unary_unary(
                '/lemo.recommender.v1.AnalyticsService/GetItemDistribution',
                request_serializer=recommender_dot_v1_dot_analytics__pb2.GetItemDistributionRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_analytics__pb2.GetItemDistributionResponse.FromString,
                _registered_method=True)
        self.GetUserBehaviorAnalysis = channel.unary_unary(
                '/lemo.recommender.v1.AnalyticsService/GetUserBehaviorAnalysis',
                request_serializer=recommender_dot_v1_dot_analytics__pb2.GetUserBehaviorAnalysisRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_analytics__pb2.GetUserBehaviorAnalysisResponse.FromString,
                _registered_method=True)
        self.ExportData = channel.unary_unary(
                '/lemo.recommender.v1.AnalyticsService/ExportData',
                request_serializer=recommender_dot_v1_dot_analytics__pb2.ExportDataRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_analytics__pb2.ExportDataResponse.FromString,
                _registered_method=True)


class AnalyticsServiceServicer(object):
    """数据分析服务
    """

    def GetDashboard(self, request, context):
        """获取仪表板概览数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetricsTrend(self, request, context):
        """获取指标趋势
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemDistribution(self, request, context):
        """获取物品分布统计
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserBehaviorAnalysis(self, request, context):
        """获取用户行为分析
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExportData(self, request, context):
        """导出数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnalyticsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDashboard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDashboard,
                    request_deserializer=recommender_dot_v1_dot_analytics__pb2.GetDashboardRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_analytics__pb2.GetDashboardResponse.SerializeToString,
            ),
            'GetMetricsTrend': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetricsTrend,
                    request_deserializer=recommender_dot_v1_dot_analytics__pb2.GetMetricsTrendRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_analytics__pb2.GetMetricsTrendResponse.SerializeToString,
            ),
            'GetItemDistribution': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemDistribution,
                    request_deserializer=recommender_dot_v1_dot_analytics__pb2.GetItemDistributionRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_analytics__pb2.GetItemDistributionResponse.SerializeToString,
            ),
            'GetUserBehaviorAnalysis': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserBehaviorAnalysis,
                    request_deserializer=recommender_dot_v1_dot_analytics__pb2.GetUserBehaviorAnalysisRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_analytics__pb2.GetUserBehaviorAnalysisResponse.SerializeToString,
            ),
            'ExportData': grpc.unary_unary_rpc_method_handler(
                    servicer.ExportData,
                    request_deserializer=recommender_dot_v1_dot_analytics__pb2.ExportDataRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_analytics__pb2.ExportDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lemo.recommender.v1.AnalyticsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lemo.recommender.v1.AnalyticsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class AnalyticsService(object):
    """数据分析服务
    """

    @staticmethod
    def GetDashboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.AnalyticsService/GetDashboard',
            recommender_dot_v1_dot_analytics__pb2.GetDashboardRequest.SerializeToString,
            recommender_dot_v1_dot_analytics__pb2.GetDashboardResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMetricsTrend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.AnalyticsService/GetMetricsTrend',
            recommender_dot_v1_dot_analytics__pb2.GetMetricsTrendRequest.SerializeToString,
            recommender_dot_v1_dot_analytics__pb2.GetMetricsTrendResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetItemDistribution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.AnalyticsService/GetItemDistribution',
            recommender_dot_v1_dot_analytics__pb2.GetItemDistributionRequest.SerializeToString,
            recommender_dot_v1_dot_analytics__pb2.GetItemDistributionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserBehaviorAnalysis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.AnalyticsService/GetUserBehaviorAnalysis',
            recommender_dot_v1_dot_analytics__pb2.GetUserBehaviorAnalysisRequest.SerializeToString,
            recommender_dot_v1_dot_analytics__pb2.GetUserBehaviorAnalysisResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExportData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.AnalyticsService/ExportData',
            recommender_dot_v1_dot_analytics__pb2.ExportDataRequest.SerializeToString,
            recommender_dot_v1_dot_analytics__pb2.ExportDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
