# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from recommender.v1 import model_pb2 as recommender_dot_v1_dot_model__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in recommender/v1/model_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ModelServiceStub(object):
    """模型管理服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateModel = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/CreateModel',
                request_serializer=recommender_dot_v1_dot_model__pb2.CreateModelRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.CreateModelResponse.FromString,
                _registered_method=True)
        self.GetModel = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/GetModel',
                request_serializer=recommender_dot_v1_dot_model__pb2.GetModelRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.GetModelResponse.FromString,
                _registered_method=True)
        self.ListModels = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/ListModels',
                request_serializer=recommender_dot_v1_dot_model__pb2.ListModelsRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.ListModelsResponse.FromString,
                _registered_method=True)
        self.UpdateModel = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/UpdateModel',
                request_serializer=recommender_dot_v1_dot_model__pb2.UpdateModelRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.UpdateModelResponse.FromString,
                _registered_method=True)
        self.DeleteModel = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/DeleteModel',
                request_serializer=recommender_dot_v1_dot_model__pb2.DeleteModelRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.DeleteModelResponse.FromString,
                _registered_method=True)
        self.TrainModel = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/TrainModel',
                request_serializer=recommender_dot_v1_dot_model__pb2.TrainModelRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.TrainModelResponse.FromString,
                _registered_method=True)
        self.GetTrainingStatus = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/GetTrainingStatus',
                request_serializer=recommender_dot_v1_dot_model__pb2.GetTrainingStatusRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.GetTrainingStatusResponse.FromString,
                _registered_method=True)
        self.DeployModel = channel.unary_unary(
                '/lemo.recommender.v1.ModelService/DeployModel',
                request_serializer=recommender_dot_v1_dot_model__pb2.DeployModelRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_model__pb2.DeployModelResponse.FromString,
                _registered_method=True)


class ModelServiceServicer(object):
    """模型管理服务
    """

    def CreateModel(self, request, context):
        """创建模型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModel(self, request, context):
        """获取模型详情
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListModels(self, request, context):
        """查询模型列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateModel(self, request, context):
        """更新模型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteModel(self, request, context):
        """删除模型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrainModel(self, request, context):
        """触发模型训练
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainingStatus(self, request, context):
        """获取训练状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeployModel(self, request, context):
        """部署模型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateModel,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.CreateModelRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.CreateModelResponse.SerializeToString,
            ),
            'GetModel': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModel,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.GetModelRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.GetModelResponse.SerializeToString,
            ),
            'ListModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListModels,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.ListModelsRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.ListModelsResponse.SerializeToString,
            ),
            'UpdateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateModel,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.UpdateModelRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.UpdateModelResponse.SerializeToString,
            ),
            'DeleteModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteModel,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.DeleteModelRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.DeleteModelResponse.SerializeToString,
            ),
            'TrainModel': grpc.unary_unary_rpc_method_handler(
                    servicer.TrainModel,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.TrainModelRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.TrainModelResponse.SerializeToString,
            ),
            'GetTrainingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainingStatus,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.GetTrainingStatusRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.GetTrainingStatusResponse.SerializeToString,
            ),
            'DeployModel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeployModel,
                    request_deserializer=recommender_dot_v1_dot_model__pb2.DeployModelRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_model__pb2.DeployModelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lemo.recommender.v1.ModelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lemo.recommender.v1.ModelService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ModelService(object):
    """模型管理服务
    """

    @staticmethod
    def CreateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/CreateModel',
            recommender_dot_v1_dot_model__pb2.CreateModelRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.CreateModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/GetModel',
            recommender_dot_v1_dot_model__pb2.GetModelRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.GetModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/ListModels',
            recommender_dot_v1_dot_model__pb2.ListModelsRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.ListModelsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/UpdateModel',
            recommender_dot_v1_dot_model__pb2.UpdateModelRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.UpdateModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/DeleteModel',
            recommender_dot_v1_dot_model__pb2.DeleteModelRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.DeleteModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TrainModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/TrainModel',
            recommender_dot_v1_dot_model__pb2.TrainModelRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.TrainModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrainingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/GetTrainingStatus',
            recommender_dot_v1_dot_model__pb2.GetTrainingStatusRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.GetTrainingStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeployModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.ModelService/DeployModel',
            recommender_dot_v1_dot_model__pb2.DeployModelRequest.SerializeToString,
            recommender_dot_v1_dot_model__pb2.DeployModelResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
