# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from recommender.v1 import flink_job_pb2 as recommender_dot_v1_dot_flink__job__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in recommender/v1/flink_job_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class FlinkJobServiceStub(object):
    """========== Flink 作业管理服务 ==========

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateJobTemplate = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/CreateJobTemplate',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.CreateJobTemplateRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.CreateJobTemplateResponse.FromString,
                _registered_method=True)
        self.GetJobTemplate = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/GetJobTemplate',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.GetJobTemplateRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.GetJobTemplateResponse.FromString,
                _registered_method=True)
        self.ListJobTemplates = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/ListJobTemplates',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.ListJobTemplatesRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.ListJobTemplatesResponse.FromString,
                _registered_method=True)
        self.SubmitJob = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/SubmitJob',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.SubmitJobRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.SubmitJobResponse.FromString,
                _registered_method=True)
        self.GetJob = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/GetJob',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.GetJobRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.GetJobResponse.FromString,
                _registered_method=True)
        self.ListJobs = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/ListJobs',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.ListJobsRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.ListJobsResponse.FromString,
                _registered_method=True)
        self.StopJob = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/StopJob',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.StopJobRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.StopJobResponse.FromString,
                _registered_method=True)
        self.PauseJob = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/PauseJob',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.PauseJobRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.PauseJobResponse.FromString,
                _registered_method=True)
        self.ResumeJob = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/ResumeJob',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.ResumeJobRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.ResumeJobResponse.FromString,
                _registered_method=True)
        self.GetClusterInfo = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/GetClusterInfo',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.GetClusterInfoRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.GetClusterInfoResponse.FromString,
                _registered_method=True)
        self.ListClusterJobs = channel.unary_unary(
                '/lemo.recommender.v1.FlinkJobService/ListClusterJobs',
                request_serializer=recommender_dot_v1_dot_flink__job__pb2.ListClusterJobsRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_flink__job__pb2.ListClusterJobsResponse.FromString,
                _registered_method=True)


class FlinkJobServiceServicer(object):
    """========== Flink 作业管理服务 ==========

    """

    def CreateJobTemplate(self, request, context):
        """作业模板管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobTemplate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobTemplates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitJob(self, request, context):
        """作业实例管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClusterInfo(self, request, context):
        """Flink 集群信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClusterJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlinkJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateJobTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateJobTemplate,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.CreateJobTemplateRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.CreateJobTemplateResponse.SerializeToString,
            ),
            'GetJobTemplate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobTemplate,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.GetJobTemplateRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.GetJobTemplateResponse.SerializeToString,
            ),
            'ListJobTemplates': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobTemplates,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.ListJobTemplatesRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.ListJobTemplatesResponse.SerializeToString,
            ),
            'SubmitJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitJob,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.SubmitJobRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.SubmitJobResponse.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.GetJobRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.GetJobResponse.SerializeToString,
            ),
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.ListJobsRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.ListJobsResponse.SerializeToString,
            ),
            'StopJob': grpc.unary_unary_rpc_method_handler(
                    servicer.StopJob,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.StopJobRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.StopJobResponse.SerializeToString,
            ),
            'PauseJob': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseJob,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.PauseJobRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.PauseJobResponse.SerializeToString,
            ),
            'ResumeJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeJob,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.ResumeJobRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.ResumeJobResponse.SerializeToString,
            ),
            'GetClusterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterInfo,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.GetClusterInfoRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.GetClusterInfoResponse.SerializeToString,
            ),
            'ListClusterJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClusterJobs,
                    request_deserializer=recommender_dot_v1_dot_flink__job__pb2.ListClusterJobsRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_flink__job__pb2.ListClusterJobsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lemo.recommender.v1.FlinkJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lemo.recommender.v1.FlinkJobService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FlinkJobService(object):
    """========== Flink 作业管理服务 ==========

    """

    @staticmethod
    def CreateJobTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/CreateJobTemplate',
            recommender_dot_v1_dot_flink__job__pb2.CreateJobTemplateRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.CreateJobTemplateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJobTemplate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/GetJobTemplate',
            recommender_dot_v1_dot_flink__job__pb2.GetJobTemplateRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.GetJobTemplateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListJobTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/ListJobTemplates',
            recommender_dot_v1_dot_flink__job__pb2.ListJobTemplatesRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.ListJobTemplatesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubmitJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/SubmitJob',
            recommender_dot_v1_dot_flink__job__pb2.SubmitJobRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.SubmitJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/GetJob',
            recommender_dot_v1_dot_flink__job__pb2.GetJobRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.GetJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/ListJobs',
            recommender_dot_v1_dot_flink__job__pb2.ListJobsRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.ListJobsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StopJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/StopJob',
            recommender_dot_v1_dot_flink__job__pb2.StopJobRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.StopJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PauseJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/PauseJob',
            recommender_dot_v1_dot_flink__job__pb2.PauseJobRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.PauseJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResumeJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/ResumeJob',
            recommender_dot_v1_dot_flink__job__pb2.ResumeJobRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.ResumeJobResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetClusterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/GetClusterInfo',
            recommender_dot_v1_dot_flink__job__pb2.GetClusterInfoRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.GetClusterInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListClusterJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.FlinkJobService/ListClusterJobs',
            recommender_dot_v1_dot_flink__job__pb2.ListClusterJobsRequest.SerializeToString,
            recommender_dot_v1_dot_flink__job__pb2.ListClusterJobsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
