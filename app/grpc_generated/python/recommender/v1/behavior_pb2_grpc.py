# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from recommender.v1 import behavior_pb2 as recommender_dot_v1_dot_behavior__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in recommender/v1/behavior_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class BehaviorServiceStub(object):
    """行为采集服务 - v2.0架构

    职责：
    1. 接收用户行为事件（埋点数据）
    2. 强制tenant_id验证（SaaS多租户隔离）
    3. 发送到Kafka消息队列
    4. 不写MongoDB（行为数据直接到ClickHouse）
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TrackEvent = channel.unary_unary(
                '/lemo.recommender.v1.BehaviorService/TrackEvent',
                request_serializer=recommender_dot_v1_dot_behavior__pb2.TrackEventRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_behavior__pb2.TrackEventResponse.FromString,
                _registered_method=True)
        self.TrackBatch = channel.unary_unary(
                '/lemo.recommender.v1.BehaviorService/TrackBatch',
                request_serializer=recommender_dot_v1_dot_behavior__pb2.TrackBatchRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_behavior__pb2.TrackBatchResponse.FromString,
                _registered_method=True)
        self.GetStats = channel.unary_unary(
                '/lemo.recommender.v1.BehaviorService/GetStats',
                request_serializer=recommender_dot_v1_dot_behavior__pb2.GetStatsRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_behavior__pb2.GetStatsResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/lemo.recommender.v1.BehaviorService/HealthCheck',
                request_serializer=recommender_dot_v1_dot_behavior__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=recommender_dot_v1_dot_behavior__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class BehaviorServiceServicer(object):
    """行为采集服务 - v2.0架构

    职责：
    1. 接收用户行为事件（埋点数据）
    2. 强制tenant_id验证（SaaS多租户隔离）
    3. 发送到Kafka消息队列
    4. 不写MongoDB（行为数据直接到ClickHouse）
    """

    def TrackEvent(self, request, context):
        """采集单个行为事件
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackBatch(self, request, context):
        """批量采集行为事件（高性能）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """获取采集统计信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """健康检查
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BehaviorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TrackEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackEvent,
                    request_deserializer=recommender_dot_v1_dot_behavior__pb2.TrackEventRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_behavior__pb2.TrackEventResponse.SerializeToString,
            ),
            'TrackBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackBatch,
                    request_deserializer=recommender_dot_v1_dot_behavior__pb2.TrackBatchRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_behavior__pb2.TrackBatchResponse.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=recommender_dot_v1_dot_behavior__pb2.GetStatsRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_behavior__pb2.GetStatsResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=recommender_dot_v1_dot_behavior__pb2.HealthCheckRequest.FromString,
                    response_serializer=recommender_dot_v1_dot_behavior__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lemo.recommender.v1.BehaviorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lemo.recommender.v1.BehaviorService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class BehaviorService(object):
    """行为采集服务 - v2.0架构

    职责：
    1. 接收用户行为事件（埋点数据）
    2. 强制tenant_id验证（SaaS多租户隔离）
    3. 发送到Kafka消息队列
    4. 不写MongoDB（行为数据直接到ClickHouse）
    """

    @staticmethod
    def TrackEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.BehaviorService/TrackEvent',
            recommender_dot_v1_dot_behavior__pb2.TrackEventRequest.SerializeToString,
            recommender_dot_v1_dot_behavior__pb2.TrackEventResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TrackBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.BehaviorService/TrackBatch',
            recommender_dot_v1_dot_behavior__pb2.TrackBatchRequest.SerializeToString,
            recommender_dot_v1_dot_behavior__pb2.TrackBatchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.BehaviorService/GetStats',
            recommender_dot_v1_dot_behavior__pb2.GetStatsRequest.SerializeToString,
            recommender_dot_v1_dot_behavior__pb2.GetStatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lemo.recommender.v1.BehaviorService/HealthCheck',
            recommender_dot_v1_dot_behavior__pb2.HealthCheckRequest.SerializeToString,
            recommender_dot_v1_dot_behavior__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
